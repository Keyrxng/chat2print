const token = "sb-ywaeexoevxxjquwlhfjx-auth-token";
const chat2printUrl = "https://chat2print.xyz";
const localhostUrl = "http://localhost:3000/";
const currentUrl = window.location.hostname;

document.body.addEventListener("click", function (event) {
  if (event.target.classList.contains("export-to-chat2print")) {
    const exportButton = event.target;

    if (exportButton.dataset.isProcessing === "true") {
      console.log("Action is already in process.");
      return;
    }

    exportButton.dataset.isProcessing = "true";
    exportButton.disabled = true;
    exportButton.innerText = "Uploading...";

    if (!exportButton.dataset.imageUrl) {
      console.error("No image url found.");
      exportButton.innerText = "Failed to Export ðŸ˜ž No image source found.";
      exportButton.style.color = "#f44336";
      exportButton.disabled = false;
      return;
    }

    fetchAndConvertImage(exportButton.dataset.imageUrl, exportButton);
  }
});

function createUIForImage(image) {
  const pd = image.parentElement;

  const pdd = pd.parentElement;
  const pddd = pdd.parentElement;
  const flexDiv = pddd.parentElement;
  const finalDiv = flexDiv.parentElement;

  const exportButton = document.createElement("button");
  exportButton.innerText = "Export to Chat2Print";

  exportButton.dataset.imageUrl = image.src;
  exportButton.dataset.isProcessing = "false";
  exportButton.classList.add("export-to-chat2print");

  exportButton.style.color = "#fdc80a";
  exportButton.style.padding = "10px";
  exportButton.style.borderRadius = "5px";
  exportButton.style.margin = "10px";
  exportButton.style.cursor = "pointer";
  exportButton.style.fontWeight = "bold";
  exportButton.style.fontSize = "16px";
  exportButton.style.border = "none";
  exportButton.style.boxShadow = "0 2px 4px 0 rgba(0,0,0,0.2)";
  exportButton.style.transition = "0.3s";

  const exportButtonContainer = document.createElement("div");
  exportButtonContainer.style.display = "flex";
  exportButtonContainer.style.flexDirection = "column";

  exportButtonContainer.appendChild(exportButton);
  finalDiv.appendChild(exportButtonContainer);
}
async function fetchAndConvertImage(imageUrl, exportButton) {
  exportButton.disabled = true;
  exportButton.innerText = "Uploading...";

  chrome.runtime.sendMessage(
    {
      message: "create",
      image64: imageUrl,
    },
    (response) => {
      exportButton.disabled = false;
      if (response.data === "Invalid image type, refresh and try again.") {
        exportButton.innerText = "Failed to Export ðŸ˜ž Invalid image type.";
        exportButton.style.color = "#f44336";
      } else if (response.data === "The resource already exists") {
        exportButton.innerText = "Image already exported ðŸ˜‰";
        exportButton.style.color = "#4caf50";
      } else {
        exportButton.innerText = "Image Exported Successfully âœ…";
        exportButton.style.color = "#4caf50";
      }
    }
  );
}

function handleMutations(mutations) {
  mutations.forEach((mutation) => {
    mutation.addedNodes.forEach((node) => {
      if (node.nodeName === "DIV" && node.classList.contains("flex")) {
        const images = node.querySelectorAll('img[alt="Generated by DALLÂ·E"]');
        images.forEach((image) => {
          createUIForImage(image);
        });
      }
    });
  });
}

async function getCookie(name, url) {
  return new Promise((resolve) => {
    chrome.cookies.get({ name, url }, (cookie) => {
      resolve(cookie ? cookie.value : null);
    });
  });
}

if (currentUrl === "chat.openai.com") {
  const observer = new MutationObserver(handleMutations);

  observer.observe(document.body, { childList: true, subtree: true });
}
